import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    //id 'com.github.ksoichiro.web.resource' version '1.7.3'
    id 'java'
    //id "io.freefair.sass-war" version "6.4.3"
    id "com.github.node-gradle.node" version "3.4.0"
}



//mainClassName = 'com.gordonchild.websocket.WebsocketsTest'


version = '0.0.1'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
        // TODO: switch back to adoptium when gradle has fixed this.
        if (Os.isFamily(Os.FAMILY_MAC)) {
            vendor.set(JvmVendorSpec.BELLSOFT)
        } else {
            vendor.set(JvmVendorSpec.ADOPTIUM)
        }
    }
    withJavadocJar()
    withSourcesJar()
}


repositories {
   mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework:spring-messaging'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3'
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'org.javassist:javassist:3.29.0-GA'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation 'org.mockito:mockito-core:4.5.1'
}

tasks.register("npmBuild", NpmTask) {
    // install the express package only
    dependsOn(tasks.npmInstall)
    args = ['run', 'build']
}

tasks.register("createTemplateDirectory") {
    doLast {
        def dir = new File("$buildDir/resources/main/templates")
        if(!dir.exists()) {
            if(!dir.mkdirs()) {
                throw RuntimeException("Could not create dirs")
            }
        }
    }
}

tasks.register("copyViews", Copy) {
    dependsOn(tasks.createTemplateDirectory, tasks.npmBuild)
    from layout.buildDirectory.dir("resources/main/webappDist")
    include "*.html"
    into layout.buildDirectory.dir("resources/main/templates/")
}
tasks.processResources.dependsOn(tasks.copyViews)

tasks.named('test') {
	useJUnitPlatform()
}
